List of Proxmox important configuration files directory

=== OpenVZ Section ===
 
config: /etc/vz/conf/xxx.conf
data: /var/lib/vz/root/xxx
template: /var/lib/vz/template/cache
snapshot: /var/lib/vz/dump
OpenVZ config: /etc/vz/vz.conf
 
=== KVM Section ===
 
config: /etc/pve/qemu-server/xxx.conf
data: /var/lib/vz/images/xxx
template: /var/lib/vz/template/iso
snapshot: /var/lib/vz/dump
 
 
=== LXC Section ===
 
config: /var/lib/lxc/xxx/config
data: /var/lib/vz/images/xxx
template: /var/lib/vz/template/cache
snapshot: /var/lib/vz/dump
 
=== Cluster Section ===
config: /etc/pve/cluster.conf
nodes vm config: /etc/pve/nodes/xxx/xxx/qemu-server/xxx.conf
=== Files ===
 
 corosync.conf  => corosync/cman cluster configuration file (previous to PVE 4.x this file was called cluster.conf)
 storage.cfg   => PVE storage configuration
 user.cfg      => PVE access control configuration (users/groups/...)
 domains.cfg   => PVE Authentication domains 
 authkey.pub   => public key used by ticket system
 
 priv/shadow.cfg  => shadow password file
 priv/authkey.key => private key used by ticket system
 
 nodes/${NAME}/pve-ssl.pem                 => public ssl key for web server
 nodes/${NAME}/priv/pve-ssl.key            => private ssl key
 nodes/${NAME}/qemu-server/${VMID}.conf    => VM configuration data for KVM VMs
 nodes/${NAME}/openvz/${VMID}.conf         => VM configuratin data for OpenVZ containers
 
=== Symbolic links ===
 
 local => nodes/${LOCALNAME}
 qemu-server => nodes/${LOCALNAME}/qemu-server/
 openvz => nodes/${LOCALNAME}/openvz/
 
=== Special status files for debugging (JSON) ===
 
 .version    => file versions (to detect file modifications)
 .members    => Info about cluster members
 .vmlist     => List of all VMs
 .clusterlog => Cluster log (last 50 entries)
 .rrd        => RRD data (most recent entries)
 
 pct console 100
=== Enable/Disable debugging ====
 
 # enable verbose syslog messages
 echo "1" >/etc/pve/.debug 
 
 # disable verbose syslog messages
 echo "0" >/etc/pve/.debug 
 

After Debian installation, how to add Grub Entries for new/other bootable disks/installations?
apt-get update
apt-get install os-prober
if os-prober package is already installed, apt will let you know, without doing any changes to the system.

Then edit /etc/default/grub and make sure you have a line like

GRUB_DISABLE_OS_PROBER=falsepct console 100

Once you're done with editing the file, if necessary, enter this command

update-grub
Note: You can skip the file editing process on your first try, but if that doesn't work you'll need to do it, then retry update-grub command.
----------------------------------------------
pveam available --section system
Before you can use such a template, you need to download them into one of your storages. You can simply use storage local for that purpose. For clustered installations, it is preferred to use a shared storage so that all nodes can access those images.

pveam download local debian-8.0-standard_8.0-1_amd64.tar.gz

You are now ready to create containers using that image, and you can list all downloaded images on storage local with:

# pveam list local

The above command shows you the full Proxmox VE volume identifiers. They include the storage name, and most other Proxmox VE commands can use them. For example you can delete that image later with:

pveam remove local:vztmpl/debian-8.0-standard_8.0-1_amd64.tar.gz
---------------------------------------------
Proxmox includes qm importdisk as command.

Extract your ova:

tar -xvf *.ova
Create a new VM without harddisks.

Import Your harddisks like this: (targetvmid is the vmnumber)

qm importdisk targetvmid disk001.vmdk local -format qcow2
-------------------------------------------
VE 5.1 host - how to turn off laptop screen?
setterm -blank 5
(time in minutes)

This should blank the console after 5 minutes, but is only working until the next reboot.
If this is wanted permanently add "consoleblank=5" to the kernel command line, i.e., open "/etc/default/grub" and add "consoleblank=300" (time in seconds) to the GRUB_CMDLINE_LINUX property, e.g.:
Code:
GRUB_CMDLINE_LINUX="consoleblank=300"
Then run "update-grub" to apply the new config for the next boot.

--blank         [0-60|force|poke] 设置多久不活动后屏幕变空白
-powersave      [on|vsync|hsync|powerdown|off]
                                   设置 vesa 节能功能
--powerdown     [0-60]            设置 vesa 关闭电源间隔(分钟)
-------------------------------------------
The default proxmox CPU governor is "performance", but you can save power by setting this to "ondemand" or "powersave". There are a number of ways to do that, here's one which doesn't require installing any packages:

echo "ondemand" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
echo "powersave" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor

Check the current CPU governor:

cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor

To make this persist across reboots, add a cron job using crontab -e as root. Add the following line:

@reboot echo "ondemand" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
@reboot echo "powersave" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor

To watch CPU frequency live, updated every two seconds:

watch "lscpu | grep MHz"

You can test CPU performance in a Windows guest using:

WinSAT cpuformal -xml c:\cpu.xml

